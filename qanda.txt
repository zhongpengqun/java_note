####### java #######
// 类默认的访问权限 default
private: Java语言中对访问权限限制的最窄的修饰符，一般称之为“私有的”。被其修饰的类、属性以及方法只能被该类的对象访问，其子类不能访问，更不能允许跨包访问。
default：即不加任何访问修饰符，通常称为“默认访问模式“。该模式下，只允许在同一个包中进行访问。
protect: 介于public 和 private 之间的一种访问修饰符，一般称之为“保护形”。被其修饰的类、属性以及方法只能被类本身的方法及子类访问，即使子类在不同的包中也可以访问。
public： Java语言中访问限制最宽的修饰符，一般称之为“公共的”。被其修饰的类、属性以及方法不仅可以跨类访问，而且允许跨包（package）访问。

// 泛型


List and ArrayList










####### IDEA #########
JREBEL热部署插件，真他妈坑，总失灵














####### springboot相关 #######
// RequestMapping and GetMapping

// sringboot对JSP支持不友好

// non-static method selectByUsername(java.lang.String) cannot be referenced from a static context
试试添加 autowired

// idea maven install下载包太慢解决方法
修改 D:\IntelliJ IDEA Educational Edition 2019.3.1\plugins\maven\lib\maven3\conf\settings.xml
在mirrors标签中添加
<mirror>
    <id>alimaven</id>
    <mirrorOf>central</mirrorOf>
    <name>aliyun maven</name>
    <url>http://maven.aliyun.com/nexus/content/repositories/central/</url>
</mirror>

// 热部署
第一步、先设置我们的pom.xml文件，加入依赖
首先是把下面代码在中

 <!--添加热部署-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
            <scope>true</scope>
        </dependency>
另外下面的代码是放在 下面里的

<plugin>
                <!--热部署配置-->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!--fork:如果没有该项配置,整个devtools不会起作用-->
                    <fork>true</fork>
                </configuration>
            </plugin>
第二步、设置IDEA的自动编译：
（1）File-Settings-Compiler勾选 Build Project automatically

（2）快捷键 ctrl + shift + alt + /,选择Registry,勾上 Compiler autoMake allow when app running

这样我们的热部署就完成了，可以再我们的项目中修改返回值，或者修改Mapping的value值后，在我们的页面中刷新试试，
我们的修改已经生效了，不用通过再关闭再开启项目查看了。

idea添加了插件jrebel

// Mybatis文档
https://mybatis.org/mybatis-3/zh/index.html

// dao层表示什么？
DAO(Data Access Object) 是数据访问层，说白了就是跟数据库打交道的，而数据库都有哪几种操作呢？没错，就是增删改查。这就意味着Dao层要提供增删改查操作。

// pojo
一些字段，再加上对应的set，get方法的class

// SSM（Spring+SpringMVC+MyBatis）

// jpa
JPA是Java Persistence API的简称，中文名Java持久层API，是JDK 5.0注解或XML描述对象－关系表的映射关系，并将运行期的实体对象持久化到数据库中
JPA是需要Provider来实现其功能的，Hibernate就是JPA Provider中很强的一个，应该说无人能出其右。从功能上来说，JPA就是Hibernate功能的一个子集。Hibernate 从3.2开始，就开始兼容JPA。Hibernate3.2获得了Sun TCK的JPA(Java Persistence API) 兼容认证

// spring security
https://my.oschina.net/u/252181/blog/1501386

// addInterceptors 不起作用

// cannot access org.springframework.core.env.EnvironmentCapable
用这个版本
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>

// 解决Java普通Utils类（非Controller、Service）注入mapper为null
https://www.liangzl.com/get-article-detail-158316.html